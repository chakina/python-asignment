# -*- coding: utf-8 -*-
"""pyhton_basics_assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dyLIHGjxdvL4qfa0HvP0pK1P9L6IgtjS

Data Types
"""

my_integer = 42
my_float = 3.14
my_string = "Hello, Python!"
print(type(my_integer))
print(type(my_float))
print(type(my_string))

"""Operators"""

def calculate_rectangle_area():
  length = float(input("Enter the length of the rectangle: "))
  width = float(input("Enter the width of the rectangle: "))
  area = length * width
  return area

print("The area of the rectangle is:", calculate_rectangle_area())

print(15 % 4)

"""conditional programming"""

def check_number_type():
  number = float(input("Enter a number: "))
  if number > 0:
    print("The number is positive.")
  elif number < 0:
    print("The number is negative.")
  else:
    print("The number is zero.")

check_number_type()

def is_leap_year(year):
  if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
    return True
  else:
    return False

year = int(input("Enter a year: "))
if is_leap_year(year):
  print(year, "is a leap year.")
else:
  print(year, "is not a leap year.")

"""Loops"""

i = 1
while i <= 5:
  print(i * i)
  i += 1

my_string = "Python"
for character in my_string:
  print(character)

"""args and Kwargs"""

def add_numbers(*args):
  sum = 0
  for number in args:
    sum += number
  return sum

add_numbers(2,4,5,6,7)

def print_info(**kwargs):
  for key, value in kwargs.items():
    print(key, ":", value)

"""lambda"""

square = lambda x: x * x

numbers = [1, 2, 3, 4, 5]
squared_numbers = list(map(square, numbers))
print(squared_numbers)

"""Map"""

def double(number):
  return number * 2

double(7)

numbers = [1, 2, 3, 4, 5]
doubled_numbers = list(map(double, numbers))
print(doubled_numbers)

"""Filter"""

numbers = [1, 2, 3, 4, 5]
even_numbers = list(filter(lambda x: x % 2 == 0, numbers))
print(even_numbers)

def is_prime(number):
  if number <= 1:
    return False
  for i in range(2, int(number**0.5) + 1):
    if number % i == 0:
      return False
  return True

is_prime(72)

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
prime_numbers = list(filter(is_prime, numbers))
print(prime_numbers)

"""All and Any"""

def is_any_string_longer_than_8_characters(list1):
  return any(len(element) > 8 for element in list1)

list1 = ["Hello", "World", "Python"]

if is_any_string_longer_than_8_characters(list1):
  print("Any string in the list is longer than 8 characters.")
else:
  print("No string in the list is longer than 8 characters.")

def are_all_elements_integers(list1):
  return all(isinstance(element, int) for element in list1)

list1 = [1, 2, 3, 4, 5]

if are_all_elements_integers(list1):
  print("All elements in the list are integers.")
else:
  print("Not all elements in the list are integers.")